{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "KafkaMirrorMaker2",
  "properties": {
    "spec": {
      "description": "The specification of the Kafka MirrorMaker 2.0 cluster.",
      "type": "object",
      "required": [
        "connectCluster"
      ],
      "properties": {
        "affinity": {
          "description": "The pod's affinity rules.",
          "type": "object",
          "properties": {
            "nodeAffinity": {
              "type": "object",
              "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "preference": {
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "operator": {
                                  "type": "string"
                                },
                                "values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "matchFields": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "operator": {
                                  "type": "string"
                                },
                                "values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "weight": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "type": "object",
                  "properties": {
                    "nodeSelectorTerms": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "operator": {
                                  "type": "string"
                                },
                                "values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "matchFields": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "operator": {
                                  "type": "string"
                                },
                                "values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "podAffinity": {
              "type": "object",
              "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "podAffinityTerm": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object"
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      },
                      "weight": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "labelSelector": {
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "operator": {
                                  "type": "string"
                                },
                                "values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "matchLabels": {
                            "type": "object"
                          }
                        }
                      },
                      "namespaces": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "topologyKey": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "podAntiAffinity": {
              "type": "object",
              "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "podAffinityTerm": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "matchLabels": {
                                "type": "object"
                              }
                            }
                          },
                          "namespaces": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "topologyKey": {
                            "type": "string"
                          }
                        }
                      },
                      "weight": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "labelSelector": {
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "operator": {
                                  "type": "string"
                                },
                                "values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "matchLabels": {
                            "type": "object"
                          }
                        }
                      },
                      "namespaces": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "topologyKey": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "clusters": {
          "description": "Kafka clusters for mirroring.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "alias",
              "bootstrapServers"
            ],
            "properties": {
              "alias": {
                "description": "Alias used to reference the Kafka cluster.",
                "type": "string",
                "pattern": "^[a-zA-Z0-9\\._\\-]{1,100}$"
              },
              "authentication": {
                "description": "Authentication configuration for connecting to the cluster.",
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "accessToken": {
                    "description": "Link to Kubernetes Secret containing the access token which was obtained from the authorization server.",
                    "type": "object",
                    "required": [
                      "key",
                      "secretName"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                        "type": "string"
                      },
                      "secretName": {
                        "description": "The name of the Kubernetes Secret containing the secret value.",
                        "type": "string"
                      }
                    }
                  },
                  "accessTokenIsJwt": {
                    "description": "Configure whether access token should be treated as JWT. This should be set to `false` if the authorization server returns opaque tokens. Defaults to `true`.",
                    "type": "boolean"
                  },
                  "certificateAndKey": {
                    "description": "Reference to the `Secret` which holds the certificate and private key pair.",
                    "type": "object",
                    "required": [
                      "certificate",
                      "key",
                      "secretName"
                    ],
                    "properties": {
                      "certificate": {
                        "description": "The name of the file certificate in the Secret.",
                        "type": "string"
                      },
                      "key": {
                        "description": "The name of the private key in the Secret.",
                        "type": "string"
                      },
                      "secretName": {
                        "description": "The name of the Secret containing the certificate.",
                        "type": "string"
                      }
                    }
                  },
                  "clientId": {
                    "description": "OAuth Client ID which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                    "type": "string"
                  },
                  "clientSecret": {
                    "description": "Link to Kubernetes Secret containing the OAuth client secret which the Kafka client can use to authenticate against the OAuth server and use the token endpoint URI.",
                    "type": "object",
                    "required": [
                      "key",
                      "secretName"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                        "type": "string"
                      },
                      "secretName": {
                        "description": "The name of the Kubernetes Secret containing the secret value.",
                        "type": "string"
                      }
                    }
                  },
                  "disableTlsHostnameVerification": {
                    "description": "Enable or disable TLS hostname verification. Default value is `false`.",
                    "type": "boolean"
                  },
                  "maxTokenExpirySeconds": {
                    "description": "Set or limit time-to-live of the access tokens to the specified number of seconds. This should be set if the authorization server returns opaque tokens.",
                    "type": "integer"
                  },
                  "passwordSecret": {
                    "description": "Reference to the `Secret` which holds the password.",
                    "type": "object",
                    "required": [
                      "password",
                      "secretName"
                    ],
                    "properties": {
                      "password": {
                        "description": "The name of the key in the Secret under which the password is stored.",
                        "type": "string"
                      },
                      "secretName": {
                        "description": "The name of the Secret containing the password.",
                        "type": "string"
                      }
                    }
                  },
                  "refreshToken": {
                    "description": "Link to Kubernetes Secret containing the refresh token which can be used to obtain access token from the authorization server.",
                    "type": "object",
                    "required": [
                      "key",
                      "secretName"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key under which the secret value is stored in the Kubernetes Secret.",
                        "type": "string"
                      },
                      "secretName": {
                        "description": "The name of the Kubernetes Secret containing the secret value.",
                        "type": "string"
                      }
                    }
                  },
                  "scope": {
                    "description": "OAuth scope to use when authenticating against the authorization server. Some authorization servers require this to be set. The possible values depend on how authorization server is configured. By default `scope` is not specified when doing the token endpoint request.",
                    "type": "string"
                  },
                  "tlsTrustedCertificates": {
                    "description": "Trusted certificates for TLS connection to the OAuth server.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "certificate",
                        "secretName"
                      ],
                      "properties": {
                        "certificate": {
                          "description": "The name of the file certificate in the Secret.",
                          "type": "string"
                        },
                        "secretName": {
                          "description": "The name of the Secret containing the certificate.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "tokenEndpointUri": {
                    "description": "Authorization server token endpoint URI.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Authentication type. Currently the only supported types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication. The `tls` type uses TLS Client Authentication. The `tls` type is supported only over TLS connections.",
                    "type": "string",
                    "enum": [
                      "tls",
                      "scram-sha-512",
                      "plain",
                      "oauth"
                    ]
                  },
                  "username": {
                    "description": "Username used for the authentication.",
                    "type": "string"
                  }
                }
              },
              "bootstrapServers": {
                "description": "A comma-separated list of `host:port` pairs for establishing the connection to the Kafka cluster.",
                "type": "string"
              },
              "config": {
                "description": "The MirrorMaker 2.0 cluster config. Properties with the following prefixes cannot be set: ssl., sasl., security., listeners, plugin.path, rest., bootstrap.servers, consumer.interceptor.classes, producer.interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).",
                "type": "object"
              },
              "tls": {
                "description": "TLS configuration for connecting MirrorMaker 2.0 connectors to a cluster.",
                "type": "object",
                "properties": {
                  "trustedCertificates": {
                    "description": "Trusted certificates for TLS connection.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "certificate",
                        "secretName"
                      ],
                      "properties": {
                        "certificate": {
                          "description": "The name of the file certificate in the Secret.",
                          "type": "string"
                        },
                        "secretName": {
                          "description": "The name of the Secret containing the certificate.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "connectCluster": {
          "description": "The cluster alias used for Kafka Connect. The alias must match a cluster in the list at `spec.clusters`.",
          "type": "string"
        },
        "externalConfiguration": {
          "description": "Pass data from Secrets or ConfigMaps to the Kafka Connect pods and use them to configure connectors.",
          "type": "object",
          "properties": {
            "env": {
              "description": "Allows to pass data from Secret or ConfigMap to the Kafka Connect pods as environment variables.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "valueFrom"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the environment variable which will be passed to the Kafka Connect pods. The name of the environment variable cannot start with `KAFKA_` or `STRIMZI_`.",
                    "type": "string"
                  },
                  "valueFrom": {
                    "description": "Value of the environment variable which will be passed to the Kafka Connect pods. It can be passed either as a reference to Secret or ConfigMap field. The field has to specify exactly one Secret or ConfigMap.",
                    "type": "object",
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Reference to a key in a ConfigMap.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        }
                      },
                      "secretKeyRef": {
                        "description": "Reference to a key in a Secret.",
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "volumes": {
              "description": "Allows to pass data from Secret or ConfigMap to the Kafka Connect pods as volumes.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "configMap": {
                    "description": "Reference to a key in a ConfigMap. Exactly one Secret or ConfigMap has to be specified.",
                    "type": "object",
                    "properties": {
                      "defaultMode": {
                        "type": "integer"
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "mode": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "optional": {
                        "type": "boolean"
                      }
                    }
                  },
                  "name": {
                    "description": "Name of the volume which will be added to the Kafka Connect pods.",
                    "type": "string"
                  },
                  "secret": {
                    "description": "Reference to a key in a Secret. Exactly one Secret or ConfigMap has to be specified.",
                    "type": "object",
                    "properties": {
                      "defaultMode": {
                        "type": "integer"
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "mode": {
                              "type": "integer"
                            },
                            "path": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "optional": {
                        "type": "boolean"
                      },
                      "secretName": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "image": {
          "description": "The docker image for the pods.",
          "type": "string"
        },
        "jvmOptions": {
          "description": "JVM Options for pods.",
          "type": "object",
          "properties": {
            "-XX": {
              "description": "A map of -XX options to the JVM.",
              "type": "object"
            },
            "-Xms": {
              "description": "-Xms option to to the JVM.",
              "type": "string",
              "pattern": "[0-9]+[mMgG]?"
            },
            "-Xmx": {
              "description": "-Xmx option to to the JVM.",
              "type": "string",
              "pattern": "[0-9]+[mMgG]?"
            },
            "gcLoggingEnabled": {
              "description": "Specifies whether the Garbage Collection logging is enabled. The default is false.",
              "type": "boolean"
            },
            "javaSystemProperties": {
              "description": "A map of additional system properties which will be passed using the `-D` option to the JVM.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The system property name.",
                    "type": "string"
                  },
                  "value": {
                    "description": "The system property value.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "livenessProbe": {
          "description": "Pod liveness checking.",
          "type": "object",
          "properties": {
            "failureThreshold": {
              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
              "type": "integer",
              "minimum": 1
            },
            "initialDelaySeconds": {
              "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
              "type": "integer",
              "minimum": 0
            },
            "periodSeconds": {
              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
              "type": "integer",
              "minimum": 1
            },
            "successThreshold": {
              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
              "type": "integer",
              "minimum": 1
            },
            "timeoutSeconds": {
              "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "logging": {
          "description": "Logging configuration for Kafka Connect.",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "loggers": {
              "description": "A Map from logger name to logger level.",
              "type": "object"
            },
            "name": {
              "description": "The name of the `ConfigMap` from which to get the logging configuration.",
              "type": "string"
            },
            "type": {
              "description": "Logging type, must be either 'inline' or 'external'.",
              "type": "string",
              "enum": [
                "inline",
                "external"
              ]
            }
          }
        },
        "metrics": {
          "description": "The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter for details of the structure of this configuration.",
          "type": "object"
        },
        "metricsConfig": {
          "description": "Metrics configuration.",
          "type": "object",
          "required": [
            "type",
            "valueFrom"
          ],
          "properties": {
            "type": {
              "description": "Metrics type. Only 'jmxPrometheusExporter' supported currently.",
              "type": "string",
              "enum": [
                "jmxPrometheusExporter"
              ]
            },
            "valueFrom": {
              "description": "ConfigMap where the Prometheus JMX Exporter configuration is stored. For details of the structure of this configuration, see the {JMXExporter}.",
              "type": "object",
              "properties": {
                "configMapKeyRef": {
                  "description": "Reference to the key in the ConfigMap containing the metrics configuration.",
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "optional": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "mirrors": {
          "description": "Configuration of the MirrorMaker 2.0 connectors.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "sourceCluster",
              "targetCluster"
            ],
            "properties": {
              "checkpointConnector": {
                "description": "The specification of the Kafka MirrorMaker 2.0 checkpoint connector.",
                "type": "object",
                "properties": {
                  "config": {
                    "description": "The Kafka Connector configuration. The following properties cannot be set: connector.class, tasks.max.",
                    "type": "object"
                  },
                  "pause": {
                    "description": "Whether the connector should be paused. Defaults to false.",
                    "type": "boolean"
                  },
                  "tasksMax": {
                    "description": "The maximum number of tasks for the Kafka Connector.",
                    "type": "integer",
                    "minimum": 1
                  }
                }
              },
              "groupsBlacklistPattern": {
                "description": "A regular expression matching the consumer groups to exclude from mirroring. Comma-separated lists are also supported.",
                "type": "string"
              },
              "groupsPattern": {
                "description": "A regular expression matching the consumer groups to be mirrored. Comma-separated lists are also supported.",
                "type": "string"
              },
              "heartbeatConnector": {
                "description": "The specification of the Kafka MirrorMaker 2.0 heartbeat connector.",
                "type": "object",
                "properties": {
                  "config": {
                    "description": "The Kafka Connector configuration. The following properties cannot be set: connector.class, tasks.max.",
                    "type": "object"
                  },
                  "pause": {
                    "description": "Whether the connector should be paused. Defaults to false.",
                    "type": "boolean"
                  },
                  "tasksMax": {
                    "description": "The maximum number of tasks for the Kafka Connector.",
                    "type": "integer",
                    "minimum": 1
                  }
                }
              },
              "sourceCluster": {
                "description": "The alias of the source cluster used by the Kafka MirrorMaker 2.0 connectors. The alias must match a cluster in the list at `spec.clusters`.",
                "type": "string"
              },
              "sourceConnector": {
                "description": "The specification of the Kafka MirrorMaker 2.0 source connector.",
                "type": "object",
                "properties": {
                  "config": {
                    "description": "The Kafka Connector configuration. The following properties cannot be set: connector.class, tasks.max.",
                    "type": "object"
                  },
                  "pause": {
                    "description": "Whether the connector should be paused. Defaults to false.",
                    "type": "boolean"
                  },
                  "tasksMax": {
                    "description": "The maximum number of tasks for the Kafka Connector.",
                    "type": "integer",
                    "minimum": 1
                  }
                }
              },
              "targetCluster": {
                "description": "The alias of the target cluster used by the Kafka MirrorMaker 2.0 connectors. The alias must match a cluster in the list at `spec.clusters`.",
                "type": "string"
              },
              "topicsBlacklistPattern": {
                "description": "A regular expression matching the topics to exclude from mirroring. Comma-separated lists are also supported.",
                "type": "string"
              },
              "topicsPattern": {
                "description": "A regular expression matching the topics to be mirrored, for example, \"topic1\\|topic2\\|topic3\". Comma-separated lists are also supported.",
                "type": "string"
              }
            }
          }
        },
        "readinessProbe": {
          "description": "Pod readiness checking.",
          "type": "object",
          "properties": {
            "failureThreshold": {
              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
              "type": "integer",
              "minimum": 1
            },
            "initialDelaySeconds": {
              "description": "The initial delay before first the health is first checked. Default to 15 seconds. Minimum value is 0.",
              "type": "integer",
              "minimum": 0
            },
            "periodSeconds": {
              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
              "type": "integer",
              "minimum": 1
            },
            "successThreshold": {
              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
              "type": "integer",
              "minimum": 1
            },
            "timeoutSeconds": {
              "description": "The timeout for each attempted health check. Default to 5 seconds. Minimum value is 1.",
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "replicas": {
          "description": "The number of pods in the Kafka Connect group.",
          "type": "integer"
        },
        "resources": {
          "description": "The maximum limits for CPU and memory resources and the requested initial resources.",
          "type": "object",
          "properties": {
            "limits": {
              "type": "object"
            },
            "requests": {
              "type": "object"
            }
          }
        },
        "template": {
          "description": "Template for Kafka Connect and Kafka Connect S2I resources. The template allows users to specify how the `Deployment`, `Pods` and `Service` are generated.",
          "type": "object",
          "properties": {
            "apiService": {
              "description": "Template for Kafka Connect API `Service`.",
              "type": "object",
              "properties": {
                "metadata": {
                  "description": "Metadata applied to the resource.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                      "type": "object"
                    },
                    "labels": {
                      "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "buildConfig": {
              "description": "Template for the Kafka Connect BuildConfig used to build new container images. The BuildConfig is used only on OpenShift.",
              "type": "object",
              "properties": {
                "metadata": {
                  "description": "Metadata applied to the resource.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                      "type": "object"
                    },
                    "labels": {
                      "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "buildContainer": {
              "description": "Template for the Kafka Connect Build container. The build container is used only on Kubernetes.",
              "type": "object",
              "properties": {
                "env": {
                  "description": "Environment variables which should be applied to the container.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The environment variable key.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The environment variable value.",
                        "type": "string"
                      }
                    }
                  }
                },
                "securityContext": {
                  "description": "Security context for the container.",
                  "type": "object",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "type": "boolean"
                    },
                    "capabilities": {
                      "type": "object",
                      "properties": {
                        "add": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "drop": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "privileged": {
                      "type": "boolean"
                    },
                    "procMount": {
                      "type": "string"
                    },
                    "readOnlyRootFilesystem": {
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "type": "integer"
                    },
                    "runAsNonRoot": {
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "type": "integer"
                    },
                    "seLinuxOptions": {
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      }
                    },
                    "seccompProfile": {
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "windowsOptions": {
                      "type": "object",
                      "properties": {
                        "gmsaCredentialSpec": {
                          "type": "string"
                        },
                        "gmsaCredentialSpecName": {
                          "type": "string"
                        },
                        "runAsUserName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "buildPod": {
              "description": "Template for Kafka Connect Build `Pods`. The build pod is used only on Kubernetes.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "The pod's affinity rules.",
                  "type": "object",
                  "properties": {
                    "nodeAffinity": {
                      "type": "object",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "preference": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchFields": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "weight": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "type": "object",
                          "properties": {
                            "nodeSelectorTerms": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchFields": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "podAffinity": {
                      "type": "object",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "podAffinityTerm": {
                                "type": "object",
                                "properties": {
                                  "labelSelector": {
                                    "type": "object",
                                    "properties": {
                                      "matchExpressions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "values": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "topologyKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "weight": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object"
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "podAntiAffinity": {
                      "type": "object",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "podAffinityTerm": {
                                "type": "object",
                                "properties": {
                                  "labelSelector": {
                                    "type": "object",
                                    "properties": {
                                      "matchExpressions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "values": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "topologyKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "weight": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object"
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "hostAliases": {
                  "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "ip": {
                        "type": "string"
                      }
                    }
                  }
                },
                "imagePullSecrets": {
                  "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "metadata": {
                  "description": "Metadata applied to the resource.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                      "type": "object"
                    },
                    "labels": {
                      "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                      "type": "object"
                    }
                  }
                },
                "priorityClassName": {
                  "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                  "type": "string"
                },
                "schedulerName": {
                  "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                  "type": "string"
                },
                "securityContext": {
                  "description": "Configures pod-level security attributes and common container settings.",
                  "type": "object",
                  "properties": {
                    "fsGroup": {
                      "type": "integer"
                    },
                    "fsGroupChangePolicy": {
                      "type": "string"
                    },
                    "runAsGroup": {
                      "type": "integer"
                    },
                    "runAsNonRoot": {
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "type": "integer"
                    },
                    "seLinuxOptions": {
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      }
                    },
                    "seccompProfile": {
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "supplementalGroups": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "sysctls": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "windowsOptions": {
                      "type": "object",
                      "properties": {
                        "gmsaCredentialSpec": {
                          "type": "string"
                        },
                        "gmsaCredentialSpecName": {
                          "type": "string"
                        },
                        "runAsUserName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                  "type": "integer",
                  "minimum": 0
                },
                "tolerations": {
                  "description": "The pod's tolerations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "topologySpreadConstraints": {
                  "description": "The pod's topology spread constraints.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "labelSelector": {
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "operator": {
                                  "type": "string"
                                },
                                "values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "matchLabels": {
                            "type": "object"
                          }
                        }
                      },
                      "maxSkew": {
                        "type": "integer"
                      },
                      "topologyKey": {
                        "type": "string"
                      },
                      "whenUnsatisfiable": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "connectContainer": {
              "description": "Template for the Kafka Connect container.",
              "type": "object",
              "properties": {
                "env": {
                  "description": "Environment variables which should be applied to the container.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The environment variable key.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The environment variable value.",
                        "type": "string"
                      }
                    }
                  }
                },
                "securityContext": {
                  "description": "Security context for the container.",
                  "type": "object",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "type": "boolean"
                    },
                    "capabilities": {
                      "type": "object",
                      "properties": {
                        "add": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "drop": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "privileged": {
                      "type": "boolean"
                    },
                    "procMount": {
                      "type": "string"
                    },
                    "readOnlyRootFilesystem": {
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "type": "integer"
                    },
                    "runAsNonRoot": {
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "type": "integer"
                    },
                    "seLinuxOptions": {
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      }
                    },
                    "seccompProfile": {
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "windowsOptions": {
                      "type": "object",
                      "properties": {
                        "gmsaCredentialSpec": {
                          "type": "string"
                        },
                        "gmsaCredentialSpecName": {
                          "type": "string"
                        },
                        "runAsUserName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deployment": {
              "description": "Template for Kafka Connect `Deployment`.",
              "type": "object",
              "properties": {
                "deploymentStrategy": {
                  "description": "DeploymentStrategy which will be used for this Deployment. Valid values are `RollingUpdate` and `Recreate`. Defaults to `RollingUpdate`.",
                  "type": "string",
                  "enum": [
                    "RollingUpdate",
                    "Recreate"
                  ]
                },
                "metadata": {
                  "description": "Metadata applied to the resource.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                      "type": "object"
                    },
                    "labels": {
                      "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                      "type": "object"
                    }
                  }
                }
              }
            },
            "initContainer": {
              "description": "Template for the Kafka init container.",
              "type": "object",
              "properties": {
                "env": {
                  "description": "Environment variables which should be applied to the container.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The environment variable key.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The environment variable value.",
                        "type": "string"
                      }
                    }
                  }
                },
                "securityContext": {
                  "description": "Security context for the container.",
                  "type": "object",
                  "properties": {
                    "allowPrivilegeEscalation": {
                      "type": "boolean"
                    },
                    "capabilities": {
                      "type": "object",
                      "properties": {
                        "add": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "drop": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "privileged": {
                      "type": "boolean"
                    },
                    "procMount": {
                      "type": "string"
                    },
                    "readOnlyRootFilesystem": {
                      "type": "boolean"
                    },
                    "runAsGroup": {
                      "type": "integer"
                    },
                    "runAsNonRoot": {
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "type": "integer"
                    },
                    "seLinuxOptions": {
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      }
                    },
                    "seccompProfile": {
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "windowsOptions": {
                      "type": "object",
                      "properties": {
                        "gmsaCredentialSpec": {
                          "type": "string"
                        },
                        "gmsaCredentialSpecName": {
                          "type": "string"
                        },
                        "runAsUserName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "pod": {
              "description": "Template for Kafka Connect `Pods`.",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "The pod's affinity rules.",
                  "type": "object",
                  "properties": {
                    "nodeAffinity": {
                      "type": "object",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "preference": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchFields": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "weight": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "type": "object",
                          "properties": {
                            "nodeSelectorTerms": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchFields": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "podAffinity": {
                      "type": "object",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "podAffinityTerm": {
                                "type": "object",
                                "properties": {
                                  "labelSelector": {
                                    "type": "object",
                                    "properties": {
                                      "matchExpressions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "values": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "topologyKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "weight": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object"
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "podAntiAffinity": {
                      "type": "object",
                      "properties": {
                        "preferredDuringSchedulingIgnoredDuringExecution": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "podAffinityTerm": {
                                "type": "object",
                                "properties": {
                                  "labelSelector": {
                                    "type": "object",
                                    "properties": {
                                      "matchExpressions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "key": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "values": {
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "namespaces": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "topologyKey": {
                                    "type": "string"
                                  }
                                }
                              },
                              "weight": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "type": "string"
                                        },
                                        "operator": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "matchLabels": {
                                    "type": "object"
                                  }
                                }
                              },
                              "namespaces": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "topologyKey": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "hostAliases": {
                  "description": "The pod's HostAliases. HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hostnames": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "ip": {
                        "type": "string"
                      }
                    }
                  }
                },
                "imagePullSecrets": {
                  "description": "List of references to secrets in the same namespace to use for pulling any of the images used by this Pod. When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster Operator and the `imagePullSecrets` option are specified, only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is ignored.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "metadata": {
                  "description": "Metadata applied to the resource.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                      "type": "object"
                    },
                    "labels": {
                      "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                      "type": "object"
                    }
                  }
                },
                "priorityClassName": {
                  "description": "The name of the priority class used to assign priority to the pods. For more information about priority classes, see {K8sPriorityClass}.",
                  "type": "string"
                },
                "schedulerName": {
                  "description": "The name of the scheduler used to dispatch this `Pod`. If not specified, the default scheduler will be used.",
                  "type": "string"
                },
                "securityContext": {
                  "description": "Configures pod-level security attributes and common container settings.",
                  "type": "object",
                  "properties": {
                    "fsGroup": {
                      "type": "integer"
                    },
                    "fsGroupChangePolicy": {
                      "type": "string"
                    },
                    "runAsGroup": {
                      "type": "integer"
                    },
                    "runAsNonRoot": {
                      "type": "boolean"
                    },
                    "runAsUser": {
                      "type": "integer"
                    },
                    "seLinuxOptions": {
                      "type": "object",
                      "properties": {
                        "level": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      }
                    },
                    "seccompProfile": {
                      "type": "object",
                      "properties": {
                        "localhostProfile": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "supplementalGroups": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "sysctls": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "windowsOptions": {
                      "type": "object",
                      "properties": {
                        "gmsaCredentialSpec": {
                          "type": "string"
                        },
                        "gmsaCredentialSpecName": {
                          "type": "string"
                        },
                        "runAsUserName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "terminationGracePeriodSeconds": {
                  "description": "The grace period is the duration in seconds after the processes running in the pod are sent a termination signal, and the time when the processes are forcibly halted with a kill signal. Set this value to longer than the expected cleanup time for your process. Value must be a non-negative integer. A zero value indicates delete immediately. You might need to increase the grace period for very large Kafka clusters, so that the Kafka brokers have enough time to transfer their work to another broker before they are terminated. Defaults to 30 seconds.",
                  "type": "integer",
                  "minimum": 0
                },
                "tolerations": {
                  "description": "The pod's tolerations.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "effect": {
                        "type": "string"
                      },
                      "key": {
                        "type": "string"
                      },
                      "operator": {
                        "type": "string"
                      },
                      "tolerationSeconds": {
                        "type": "integer"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "topologySpreadConstraints": {
                  "description": "The pod's topology spread constraints.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "labelSelector": {
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "operator": {
                                  "type": "string"
                                },
                                "values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "matchLabels": {
                            "type": "object"
                          }
                        }
                      },
                      "maxSkew": {
                        "type": "integer"
                      },
                      "topologyKey": {
                        "type": "string"
                      },
                      "whenUnsatisfiable": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "podDisruptionBudget": {
              "description": "Template for Kafka Connect `PodDisruptionBudget`.",
              "type": "object",
              "properties": {
                "maxUnavailable": {
                  "description": "Maximum number of unavailable pods to allow automatic Pod eviction. A Pod eviction is allowed when the `maxUnavailable` number of pods or fewer are unavailable after the eviction. Setting this value to 0 prevents all voluntary evictions, so the pods must be evicted manually. Defaults to 1.",
                  "type": "integer",
                  "minimum": 0
                },
                "metadata": {
                  "description": "Metadata to apply to the `PodDistruptionBugetTemplate` resource.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                      "type": "object"
                    },
                    "labels": {
                      "description": "Labels added to the resource template. Can be applied to different resources such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "tolerations": {
          "description": "The pod's tolerations.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "effect": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "operator": {
                "type": "string"
              },
              "tolerationSeconds": {
                "type": "integer"
              },
              "value": {
                "type": "string"
              }
            }
          }
        },
        "tracing": {
          "description": "The configuration of tracing in Kafka Connect.",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "Type of the tracing used. Currently the only supported type is `jaeger` for Jaeger tracing.",
              "type": "string",
              "enum": [
                "jaeger"
              ]
            }
          }
        },
        "version": {
          "description": "The Kafka Connect version. Defaults to {DefaultKafkaVersion}. Consult the user documentation to understand the process required to upgrade or downgrade the version.",
          "type": "string"
        }
      }
    },
    "status": {
      "description": "The status of the Kafka MirrorMaker 2.0 cluster.",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "List of status conditions.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition of a type changed from one status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ', in the UTC time zone.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about the condition's last transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition (a single word in CamelCase).",
                "type": "string"
              },
              "status": {
                "description": "The status of the condition, either True, False or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "The unique identifier of a condition, used to distinguish between other conditions in the resource.",
                "type": "string"
              }
            }
          }
        },
        "connectorPlugins": {
          "description": "The list of connector plugins available in this Kafka Connect deployment.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "class": {
                "description": "The class of the connector plugin.",
                "type": "string"
              },
              "type": {
                "description": "The type of the connector plugin. The available types are `sink` and `source`.",
                "type": "string"
              },
              "version": {
                "description": "The version of the connector plugin.",
                "type": "string"
              }
            }
          }
        },
        "connectors": {
          "description": "List of MirrorMaker 2.0 connector statuses, as reported by the Kafka Connect REST API.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "labelSelector": {
          "description": "Label selector for pods providing this resource.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "The generation of the CRD that was last reconciled by the operator.",
          "type": "integer"
        },
        "replicas": {
          "description": "The current number of pods being used to provide this resource.",
          "type": "integer"
        },
        "url": {
          "description": "The URL of the REST API endpoint for managing and monitoring Kafka Connect connectors.",
          "type": "string"
        }
      }
    }
  }
}